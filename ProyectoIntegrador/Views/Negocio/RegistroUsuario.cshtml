@model ProyectoIntegrador.ReferenciaNegocio.TB_USUARIO

@{
    ViewBag.Title = "RegistroUsuario";
}

<h2>Registro Usuario</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <label class="control-label col-md-2" for="NOM_USU">Nombres</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.NOM_USU, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NOM_USU, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="APE_USU">Apellidos</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.APE_USU, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.APE_USU, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="ID_DISTRITO">Distrito</label>
            <div class="col-md-10">
                @Html.DropDownList("ID_DISTRITO", (SelectList)ViewBag.lstDist, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="ID_DOC">Tipo de documento</label>
            <div class="col-md-10">
                @Html.DropDownList("ID_DOC", (SelectList)ViewBag.tipoDoc, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="NUM_DOC_USU">Número de documento</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.NUM_DOC_USU, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NUM_DOC_USU, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="NUMERO_CONTACTO_USU">Número de contacto</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.NUMERO_CONTACTO_USU, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NUMERO_CONTACTO_USU, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="EMAIL_USU">E-Mail</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.EMAIL_USU, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EMAIL_USU, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="LOGIN_USU">Usuario</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.LOGIN_USU, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LOGIN_USU, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="PASSWORD_USU">Contraseña</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.PASSWORD_USU, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PASSWORD_USU, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
